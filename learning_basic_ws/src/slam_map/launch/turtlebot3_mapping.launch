<launch>

<!-- 功能：在world中启动turtlebot3，并启动建图节点 -->
 
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="-2.0"/>
  <arg name="y_pos" default="-0.5"/>
  <arg name="z_pos" default="0.0"/>
   <arg name = "configuration_basename" default="turtlebot3_lds_2d.lua" />
   <arg name="open_rviz" default="true" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find slam_map)/world/clean_room.world"/> <!-- Note: the world_name is with respect to GAZEBO_RESOURCE_PATH environmental variable -->
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <!-- <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf"  args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" /> -->
   <!-- 一定要启动turtlebot的bringup节点，才能打开雷达，发送机器人自身多个坐标系的tf变换--> 
   <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>

  

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find slam_map)/rviz/turtlebot3_slam.rviz"/>

   <include file = "$(find slam_map)/launch/turtlebot3_slam.launch" >
      <arg name = "model" value = "$(arg model)" />
      <arg name = "configuration_basename" value ="$(arg configuration_basename)" />
   </include>

  

</launch>

<!-- 测试发布速度的节点 -->
<!--node pkg="slam_map" type="vel_cmd_publisher" name="vel_cmd_publisher"  /--> 
